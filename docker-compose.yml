version: "3.8"
services:
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data
  rubinot:
    build:
      context: .
      dockerfile: Dockerfile
    image: rubinot
    container_name: rubinot
    depends_on:
      - cache
    restart: unless-stopped
    networks:
      - app-network
  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - rubinot
    networks:
      - app-network
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email mail@mmartins.dev --agree-tos --no-eff-email --staging -d bot.m1theus.dev  -d www.bot.m1theus.com
volumes:
  cache:
    driver: local
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/ubuntu/Nodejs-docker/views/
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /home/ubuntu/Nodejs-docker/dhparam/
      o: bind
networks:
  app-network:
    driver: bridge
